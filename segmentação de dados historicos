{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import plotly.graph_objects as go\n",
    "\n",
    "# Ler o arquivo CSV\n",
    "df = pd.read_csv('dados.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Histograma para ilustrar a distribuição de clientes por idade"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "plotlyServerURL": "https://plot.ly"
       },
       "data": [
        {
         "hovertemplate": "Idade: %{x} anos<br>Número de Clientes: %{y}<extra></extra>",
         "marker": {
          "color": "skyblue",
          "line": {
           "color": "black",
           "width": 1
          }
         },
         "type": "bar",
         "x": [
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          46,
          47,
          48,
          49,
          50,
          51,
          52,
          53,
          54,
          55,
          56
         ],
         "y": [
          2,
          12,
          14,
          21,
          30,
          25,
          30,
          33,
          38,
          51,
          30,
          42,
          30,
          31,
          38,
          40,
          33,
          31,
          30,
          41,
          32,
          36,
          16,
          22,
          15,
          21,
          18,
          22,
          19,
          5,
          11,
          7,
          9,
          7,
          4,
          2,
          2
         ]
        }
       ],
       "layout": {
        "bargap": 0.2,
        "showlegend": false,
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "white",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "white",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "#C8D4E3",
             "linecolor": "#C8D4E3",
             "minorgridcolor": "#C8D4E3",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "#C8D4E3",
             "linecolor": "#C8D4E3",
             "minorgridcolor": "#C8D4E3",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "fillpattern": {
             "fillmode": "overlay",
             "size": 10,
             "solidity": 0.2
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "white",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "#C8D4E3"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "white",
          "polar": {
           "angularaxis": {
            "gridcolor": "#EBF0F8",
            "linecolor": "#EBF0F8",
            "ticks": ""
           },
           "bgcolor": "white",
           "radialaxis": {
            "gridcolor": "#EBF0F8",
            "linecolor": "#EBF0F8",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "white",
            "gridcolor": "#DFE8F3",
            "gridwidth": 2,
            "linecolor": "#EBF0F8",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "#EBF0F8"
           },
           "yaxis": {
            "backgroundcolor": "white",
            "gridcolor": "#DFE8F3",
            "gridwidth": 2,
            "linecolor": "#EBF0F8",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "#EBF0F8"
           },
           "zaxis": {
            "backgroundcolor": "white",
            "gridcolor": "#DFE8F3",
            "gridwidth": 2,
            "linecolor": "#EBF0F8",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "#EBF0F8"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "#DFE8F3",
            "linecolor": "#A2B1C6",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "#DFE8F3",
            "linecolor": "#A2B1C6",
            "ticks": ""
           },
           "bgcolor": "white",
           "caxis": {
            "gridcolor": "#DFE8F3",
            "linecolor": "#A2B1C6",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "#EBF0F8",
           "linecolor": "#EBF0F8",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "#EBF0F8",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "#EBF0F8",
           "linecolor": "#EBF0F8",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "#EBF0F8",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "font": {
          "size": 20
         },
         "text": "Distribuição de Clientes por Idade",
         "x": 0.5,
         "xanchor": "center",
         "y": 0.95,
         "yanchor": "top"
        },
        "xaxis": {
         "dtick": 1,
         "tick0": 20,
         "title": {
          "font": {
           "size": 14
          },
          "text": "Idade (anos)"
         }
        },
        "yaxis": {
         "title": {
          "font": {
           "size": 14
          },
          "text": "Número de Clientes"
         }
        }
       }
      }
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Contar a frequência para cada idade\n",
    "age_counts = df['Idade'].value_counts().sort_index()\n",
    "\n",
    "# Criar a figura\n",
    "fig = go.Figure()\n",
    "\n",
    "# Adicionar barras\n",
    "fig.add_trace(go.Bar(\n",
    "    x=age_counts.index,\n",
    "    y=age_counts.values,\n",
    "    marker_color='skyblue',\n",
    "    marker_line_color='black',\n",
    "    marker_line_width=1,\n",
    "    hovertemplate='Idade: %{x} anos<br>Número de Clientes: %{y}<extra></extra>'\n",
    "))\n",
    "\n",
    "# Personalizar o layout\n",
    "fig.update_layout(\n",
    "    title={\n",
    "        'text': 'Distribuição de Clientes por Idade',\n",
    "        'y': 0.95,\n",
    "        'x': 0.5,\n",
    "        'xanchor': 'center',\n",
    "        'yanchor': 'top',\n",
    "        'font': {'size': 20}\n",
    "    },\n",
    "    xaxis_title={\n",
    "        'text': 'Idade (anos)',\n",
    "        'font': {'size': 14}\n",
    "    },\n",
    "    yaxis_title={\n",
    "        'text': 'Número de Clientes',\n",
    "        'font': {'size': 14}\n",
    "    },\n",
    "    xaxis={\n",
    "        'dtick': 1,  # Forçar marca de tick para cada idade\n",
    "        'tick0': age_counts.index.min(),  # Iniciar da idade mínima\n",
    "    },\n",
    "    template='plotly_white',\n",
    "    showlegend=False,\n",
    "    bargap=0.2\n",
    ")\n",
    "\n",
    "# Exibir o gráfico\n",
    "fig.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Percentual de clientes inadimplentes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total de Clientes: 850\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "#T_bcc06 th {\n",
       "  background-color: #4a90e2;\n",
       "  color: white;\n",
       "  font-weight: bold;\n",
       "  text-align: center;\n",
       "  padding: 12px;\n",
       "}\n",
       "#T_bcc06_row0_col0, #T_bcc06_row0_col1, #T_bcc06_row0_col2, #T_bcc06_row1_col0, #T_bcc06_row1_col1, #T_bcc06_row1_col2, #T_bcc06_row2_col0, #T_bcc06_row2_col1, #T_bcc06_row2_col2 {\n",
       "  background-color: #f8f9fa;\n",
       "  color: black;\n",
       "  border-color: #dee2e6;\n",
       "  font-family: Arial, sans-serif;\n",
       "  padding: 12px;\n",
       "  text-align: center;\n",
       "}\n",
       "</style>\n",
       "<table id=\"T_bcc06\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th id=\"T_bcc06_level0_col0\" class=\"col_heading level0 col0\" >Status</th>\n",
       "      <th id=\"T_bcc06_level0_col1\" class=\"col_heading level0 col1\" >Quantidade</th>\n",
       "      <th id=\"T_bcc06_level0_col2\" class=\"col_heading level0 col2\" >Percentual</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td id=\"T_bcc06_row0_col0\" class=\"data row0 col0\" >Adimplente</td>\n",
       "      <td id=\"T_bcc06_row0_col1\" class=\"data row0 col1\" >517</td>\n",
       "      <td id=\"T_bcc06_row0_col2\" class=\"data row0 col2\" >60.82%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td id=\"T_bcc06_row1_col0\" class=\"data row1 col0\" >Inadimplente</td>\n",
       "      <td id=\"T_bcc06_row1_col1\" class=\"data row1 col1\" >183</td>\n",
       "      <td id=\"T_bcc06_row1_col2\" class=\"data row1 col2\" >21.53%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td id=\"T_bcc06_row2_col0\" class=\"data row2 col0\" >Sem Informação</td>\n",
       "      <td id=\"T_bcc06_row2_col1\" class=\"data row2 col1\" >150</td>\n",
       "      <td id=\"T_bcc06_row2_col2\" class=\"data row2 col2\" >17.65%</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x2a4f5c16060>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "#T_8dd7a th {\n",
       "  background-color: #4a90e2;\n",
       "  color: white;\n",
       "  font-weight: bold;\n",
       "  text-align: center;\n",
       "  padding: 12px;\n",
       "}\n",
       "#T_8dd7a_row0_col0, #T_8dd7a_row0_col1, #T_8dd7a_row1_col0, #T_8dd7a_row1_col1, #T_8dd7a_row2_col0, #T_8dd7a_row2_col1 {\n",
       "  background-color: #f8f9fa;\n",
       "  color: black;\n",
       "  border-color: #dee2e6;\n",
       "  font-family: Arial, sans-serif;\n",
       "  padding: 12px;\n",
       "  text-align: center;\n",
       "}\n",
       "</style>\n",
       "<table id=\"T_8dd7a\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th id=\"T_8dd7a_level0_col0\" class=\"col_heading level0 col0\" >Abordagem</th>\n",
       "      <th id=\"T_8dd7a_level0_col1\" class=\"col_heading level0 col1\" >Taxa de Inadimplência</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td id=\"T_8dd7a_row0_col0\" class=\"data row0 col0\" >Conservadora (excluindo NULLs)</td>\n",
       "      <td id=\"T_8dd7a_row0_col1\" class=\"data row0 col1\" >26.14%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td id=\"T_8dd7a_row1_col0\" class=\"data row1 col0\" >Melhor Cenário (NULLs como adimplentes)</td>\n",
       "      <td id=\"T_8dd7a_row1_col1\" class=\"data row1 col1\" >21.53%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td id=\"T_8dd7a_row2_col0\" class=\"data row2 col0\" >Pior Cenário (NULLs como inadimplentes)</td>\n",
       "      <td id=\"T_8dd7a_row2_col1\" class=\"data row2 col1\" >39.18%</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x2a4f5c16060>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "plotlyServerURL": "https://plot.ly"
       },
       "data": [
        {
         "domain": {
          "x": [
           0,
           1
          ],
          "y": [
           0,
           1
          ]
         },
         "hole": 0.4,
         "hovertemplate": "Status: %{label}<br>Quantidade: %{value:,.0f}<br>Percentual: %{percent}<extra></extra>",
         "labels": [
          "Adimplente",
          "Inadimplente",
          "Sem Informação"
         ],
         "legendgroup": "",
         "name": "",
         "showlegend": true,
         "textinfo": "percent+value",
         "type": "pie",
         "values": [
          517,
          183,
          150
         ]
        }
       ],
       "layout": {
        "legend": {
         "tracegroupgap": 0
        },
        "piecolorway": [
         "#2ecc71",
         "#e74c3c",
         "#95a5a6"
        ],
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "fillpattern": {
             "fillmode": "overlay",
             "size": 10,
             "solidity": 0.2
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "font": {
          "size": 16
         },
         "text": "Distribuição do Status de Inadimplência",
         "x": 0.5,
         "xanchor": "center",
         "y": 0.95,
         "yanchor": "top"
        }
       }
      }
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import plotly.express as px\n",
    "\n",
    "# Calcular estatísticas\n",
    "total_customers = len(df)\n",
    "null_count = df['Inadimplente'].isna().sum()\n",
    "delinquent_count = df['Inadimplente'].eq(1).sum()\n",
    "non_delinquent_count = df['Inadimplente'].eq(0).sum()\n",
    "\n",
    "# Criar DataFrame de análise\n",
    "analysis_df = pd.DataFrame({\n",
    "    'Status': ['Adimplente', 'Inadimplente', 'Sem Informação'],\n",
    "    'Quantidade': [non_delinquent_count, delinquent_count, null_count],\n",
    "    'Percentual': [\n",
    "        (non_delinquent_count/total_customers),\n",
    "        (delinquent_count/total_customers),\n",
    "        (null_count/total_customers)\n",
    "    ]\n",
    "})\n",
    "\n",
    "# Calcular taxas para diferentes abordagens\n",
    "known_status_df = df[df['Inadimplente'].notna()]\n",
    "known_total = len(known_status_df)\n",
    "rates_df = pd.DataFrame({\n",
    "    'Abordagem': [\n",
    "        'Conservadora (excluindo NULLs)',\n",
    "        'Melhor Cenário (NULLs como adimplentes)',\n",
    "        'Pior Cenário (NULLs como inadimplentes)'\n",
    "    ],\n",
    "    'Taxa de Inadimplência': [\n",
    "        delinquent_count / known_total,\n",
    "        delinquent_count / total_customers,\n",
    "        (delinquent_count + null_count) / total_customers\n",
    "    ]\n",
    "})\n",
    "\n",
    "def style_dataframe(df):\n",
    "    return df.style\\\n",
    "        .format({\n",
    "            'Quantidade': '{:,.0f}',\n",
    "            'Percentual': '{:.2%}',\n",
    "            'Taxa de Inadimplência': '{:.2%}'\n",
    "        })\\\n",
    "        .set_properties(**{\n",
    "            'background-color': '#f8f9fa',\n",
    "            'color': 'black',\n",
    "            'border-color': '#dee2e6',\n",
    "            'font-family': 'Arial, sans-serif',\n",
    "            'padding': '12px',\n",
    "            'text-align': 'center'\n",
    "        })\\\n",
    "        .set_table_styles([{\n",
    "            'selector': 'th',\n",
    "            'props': [\n",
    "                ('background-color', '#4a90e2'),\n",
    "                ('color', 'white'),\n",
    "                ('font-weight', 'bold'),\n",
    "                ('text-align', 'center'),\n",
    "                ('padding', '12px')\n",
    "            ]\n",
    "        }])\\\n",
    "        .hide(axis='index')\n",
    "\n",
    "# Exibir total e tabelas\n",
    "print(f\"Total de Clientes: {total_customers:,}\")\n",
    "display(style_dataframe(analysis_df))\n",
    "display(style_dataframe(rates_df))\n",
    "\n",
    "# Criar gráfico de rosca\n",
    "fig = px.pie(\n",
    "    analysis_df,\n",
    "    values='Quantidade',\n",
    "    names='Status',\n",
    "    title='Distribuição do Status de Inadimplência',\n",
    "    color_discrete_sequence=['#2ecc71', '#e74c3c', '#95a5a6'],\n",
    "    hole=0.4\n",
    ")\n",
    "\n",
    "fig.update_layout(\n",
    "    title={\n",
    "        'text': 'Distribuição do Status de Inadimplência',\n",
    "        'y': 0.95,\n",
    "        'x': 0.5,\n",
    "        'xanchor': 'center',\n",
    "        'yanchor': 'top',\n",
    "        'font': {'size': 16}\n",
    "    }\n",
    ")\n",
    "\n",
    "fig.update_traces(\n",
    "    textinfo='percent+value',\n",
    "    hovertemplate='Status: %{label}<br>Quantidade: %{value:,.0f}<br>Percentual: %{percent}<extra></extra>'\n",
    ")\n",
    "\n",
    "fig.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Excluíndo outliers e clientes com informações ausentes"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A fim de melhorar a qualidade da segmentação, serão removidos os clientes com informação de inadimplência ausente e clientes com padrões muito desviados da média, com o método z-score."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dados Limpos sem Valores Ausentes e Outliers:\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Idade</th>\n",
       "      <th>Educação</th>\n",
       "      <th>Anos de emprego</th>\n",
       "      <th>Renda</th>\n",
       "      <th>Dívida do cartão</th>\n",
       "      <th>Outras dívidas</th>\n",
       "      <th>Inadimplente</th>\n",
       "      <th>Razão débito-renda</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>41</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>19</td>\n",
       "      <td>0.124</td>\n",
       "      <td>1.073</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>47</td>\n",
       "      <td>1</td>\n",
       "      <td>26</td>\n",
       "      <td>100</td>\n",
       "      <td>4.582</td>\n",
       "      <td>8.218</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>33</td>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>57</td>\n",
       "      <td>6.111</td>\n",
       "      <td>5.802</td>\n",
       "      <td>1.0</td>\n",
       "      <td>20.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>29</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>19</td>\n",
       "      <td>0.681</td>\n",
       "      <td>0.516</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>38</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>56</td>\n",
       "      <td>0.442</td>\n",
       "      <td>0.454</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>843</th>\n",
       "      <td>32</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>45</td>\n",
       "      <td>0.982</td>\n",
       "      <td>0.683</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>844</th>\n",
       "      <td>41</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>43</td>\n",
       "      <td>0.694</td>\n",
       "      <td>1.198</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>846</th>\n",
       "      <td>28</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>34</td>\n",
       "      <td>0.359</td>\n",
       "      <td>2.021</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>848</th>\n",
       "      <td>32</td>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "      <td>28</td>\n",
       "      <td>0.116</td>\n",
       "      <td>0.696</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>849</th>\n",
       "      <td>52</td>\n",
       "      <td>1</td>\n",
       "      <td>16</td>\n",
       "      <td>64</td>\n",
       "      <td>1.866</td>\n",
       "      <td>3.638</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>661 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Idade  Educação  Anos de emprego  Renda  Dívida do cartão  \\\n",
       "0       41         2                6     19             0.124   \n",
       "1       47         1               26    100             4.582   \n",
       "2       33         2               10     57             6.111   \n",
       "3       29         2                4     19             0.681   \n",
       "6       38         2                4     56             0.442   \n",
       "..     ...       ...              ...    ...               ...   \n",
       "843     32         2                8     45             0.982   \n",
       "844     41         1                7     43             0.694   \n",
       "846     28         2                7     34             0.359   \n",
       "848     32         1               12     28             0.116   \n",
       "849     52         1               16     64             1.866   \n",
       "\n",
       "     Outras dívidas  Inadimplente  Razão débito-renda  \n",
       "0             1.073           0.0                 6.3  \n",
       "1             8.218           0.0                12.8  \n",
       "2             5.802           1.0                20.9  \n",
       "3             0.516           0.0                 6.3  \n",
       "6             0.454           0.0                 1.6  \n",
       "..              ...           ...                 ...  \n",
       "843           0.683           0.0                 3.7  \n",
       "844           1.198           0.0                 4.4  \n",
       "846           2.021           0.0                 7.0  \n",
       "848           0.696           0.0                 2.9  \n",
       "849           3.638           0.0                 8.6  \n",
       "\n",
       "[661 rows x 8 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dados Excluídos devido a Valores Ausentes:\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Idade</th>\n",
       "      <th>Educação</th>\n",
       "      <th>Anos de emprego</th>\n",
       "      <th>Renda</th>\n",
       "      <th>Dívida do cartão</th>\n",
       "      <th>Outras dívidas</th>\n",
       "      <th>Inadimplente</th>\n",
       "      <th>Razão débito-renda</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>40</td>\n",
       "      <td>1</td>\n",
       "      <td>23</td>\n",
       "      <td>81</td>\n",
       "      <td>0.998</td>\n",
       "      <td>7.831</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>26</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>18</td>\n",
       "      <td>0.575</td>\n",
       "      <td>2.215</td>\n",
       "      <td>NaN</td>\n",
       "      <td>15.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>34</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>40</td>\n",
       "      <td>0.374</td>\n",
       "      <td>0.266</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>46</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>30</td>\n",
       "      <td>1.415</td>\n",
       "      <td>3.865</td>\n",
       "      <td>NaN</td>\n",
       "      <td>17.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>24</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>16</td>\n",
       "      <td>0.185</td>\n",
       "      <td>1.287</td>\n",
       "      <td>NaN</td>\n",
       "      <td>9.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>818</th>\n",
       "      <td>35</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>35</td>\n",
       "      <td>2.383</td>\n",
       "      <td>1.957</td>\n",
       "      <td>NaN</td>\n",
       "      <td>12.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>820</th>\n",
       "      <td>37</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>24</td>\n",
       "      <td>0.419</td>\n",
       "      <td>2.989</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>825</th>\n",
       "      <td>32</td>\n",
       "      <td>2</td>\n",
       "      <td>12</td>\n",
       "      <td>116</td>\n",
       "      <td>4.027</td>\n",
       "      <td>2.585</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>835</th>\n",
       "      <td>21</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>41</td>\n",
       "      <td>2.367</td>\n",
       "      <td>5.628</td>\n",
       "      <td>NaN</td>\n",
       "      <td>19.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>845</th>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>26</td>\n",
       "      <td>0.548</td>\n",
       "      <td>1.220</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6.8</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>150 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Idade  Educação  Anos de emprego  Renda  Dívida do cartão  \\\n",
       "5       40         1               23     81             0.998   \n",
       "8       26         1                5     18             0.575   \n",
       "11      34         2                9     40             0.374   \n",
       "13      46         1                6     30             1.415   \n",
       "15      24         1                1     16             0.185   \n",
       "..     ...       ...              ...    ...               ...   \n",
       "818     35         2                0     35             2.383   \n",
       "820     37         1                4     24             0.419   \n",
       "825     32         2               12    116             4.027   \n",
       "835     21         3                0     41             2.367   \n",
       "845     27         1                5     26             0.548   \n",
       "\n",
       "     Outras dívidas  Inadimplente  Razão débito-renda  \n",
       "5             7.831           NaN                10.9  \n",
       "8             2.215           NaN                15.5  \n",
       "11            0.266           NaN                 1.6  \n",
       "13            3.865           NaN                17.6  \n",
       "15            1.287           NaN                 9.2  \n",
       "..              ...           ...                 ...  \n",
       "818           1.957           NaN                12.4  \n",
       "820           2.989           NaN                14.2  \n",
       "825           2.585           NaN                 5.7  \n",
       "835           5.628           NaN                19.5  \n",
       "845           1.220           NaN                 6.8  \n",
       "\n",
       "[150 rows x 8 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dados Excluídos devido a Outliers:\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Idade</th>\n",
       "      <th>Educação</th>\n",
       "      <th>Anos de emprego</th>\n",
       "      <th>Renda</th>\n",
       "      <th>Dívida do cartão</th>\n",
       "      <th>Outras dívidas</th>\n",
       "      <th>Inadimplente</th>\n",
       "      <th>Razão débito-renda</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>47</td>\n",
       "      <td>1</td>\n",
       "      <td>31</td>\n",
       "      <td>253</td>\n",
       "      <td>9.308</td>\n",
       "      <td>8.908</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>37</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>123</td>\n",
       "      <td>3.022</td>\n",
       "      <td>18.257</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>37</td>\n",
       "      <td>5</td>\n",
       "      <td>9</td>\n",
       "      <td>177</td>\n",
       "      <td>0.888</td>\n",
       "      <td>9.555</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>36</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "      <td>33</td>\n",
       "      <td>1.266</td>\n",
       "      <td>9.459</td>\n",
       "      <td>0.0</td>\n",
       "      <td>32.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78</th>\n",
       "      <td>41</td>\n",
       "      <td>2</td>\n",
       "      <td>21</td>\n",
       "      <td>145</td>\n",
       "      <td>3.237</td>\n",
       "      <td>14.453</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>30</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>65</td>\n",
       "      <td>3.900</td>\n",
       "      <td>15.405</td>\n",
       "      <td>1.0</td>\n",
       "      <td>29.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>40</td>\n",
       "      <td>3</td>\n",
       "      <td>18</td>\n",
       "      <td>157</td>\n",
       "      <td>3.326</td>\n",
       "      <td>7.036</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>183</th>\n",
       "      <td>47</td>\n",
       "      <td>1</td>\n",
       "      <td>29</td>\n",
       "      <td>129</td>\n",
       "      <td>20.561</td>\n",
       "      <td>12.076</td>\n",
       "      <td>1.0</td>\n",
       "      <td>25.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>198</th>\n",
       "      <td>47</td>\n",
       "      <td>3</td>\n",
       "      <td>16</td>\n",
       "      <td>221</td>\n",
       "      <td>15.792</td>\n",
       "      <td>23.104</td>\n",
       "      <td>1.0</td>\n",
       "      <td>17.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>207</th>\n",
       "      <td>43</td>\n",
       "      <td>1</td>\n",
       "      <td>25</td>\n",
       "      <td>242</td>\n",
       "      <td>1.636</td>\n",
       "      <td>4.656</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>320</th>\n",
       "      <td>41</td>\n",
       "      <td>3</td>\n",
       "      <td>13</td>\n",
       "      <td>91</td>\n",
       "      <td>2.316</td>\n",
       "      <td>20.616</td>\n",
       "      <td>1.0</td>\n",
       "      <td>25.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>350</th>\n",
       "      <td>47</td>\n",
       "      <td>1</td>\n",
       "      <td>31</td>\n",
       "      <td>136</td>\n",
       "      <td>14.231</td>\n",
       "      <td>17.185</td>\n",
       "      <td>1.0</td>\n",
       "      <td>23.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>356</th>\n",
       "      <td>40</td>\n",
       "      <td>2</td>\n",
       "      <td>13</td>\n",
       "      <td>102</td>\n",
       "      <td>6.227</td>\n",
       "      <td>13.051</td>\n",
       "      <td>1.0</td>\n",
       "      <td>18.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>360</th>\n",
       "      <td>42</td>\n",
       "      <td>4</td>\n",
       "      <td>15</td>\n",
       "      <td>186</td>\n",
       "      <td>2.404</td>\n",
       "      <td>4.292</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>367</th>\n",
       "      <td>46</td>\n",
       "      <td>5</td>\n",
       "      <td>15</td>\n",
       "      <td>126</td>\n",
       "      <td>0.477</td>\n",
       "      <td>3.429</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>443</th>\n",
       "      <td>51</td>\n",
       "      <td>2</td>\n",
       "      <td>31</td>\n",
       "      <td>249</td>\n",
       "      <td>4.273</td>\n",
       "      <td>15.149</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>450</th>\n",
       "      <td>41</td>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>86</td>\n",
       "      <td>4.991</td>\n",
       "      <td>17.799</td>\n",
       "      <td>1.0</td>\n",
       "      <td>26.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>454</th>\n",
       "      <td>51</td>\n",
       "      <td>2</td>\n",
       "      <td>27</td>\n",
       "      <td>166</td>\n",
       "      <td>0.821</td>\n",
       "      <td>18.269</td>\n",
       "      <td>0.0</td>\n",
       "      <td>11.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>461</th>\n",
       "      <td>41</td>\n",
       "      <td>3</td>\n",
       "      <td>17</td>\n",
       "      <td>176</td>\n",
       "      <td>11.359</td>\n",
       "      <td>5.009</td>\n",
       "      <td>1.0</td>\n",
       "      <td>9.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>497</th>\n",
       "      <td>33</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>72</td>\n",
       "      <td>15.017</td>\n",
       "      <td>14.719</td>\n",
       "      <td>1.0</td>\n",
       "      <td>41.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>513</th>\n",
       "      <td>54</td>\n",
       "      <td>1</td>\n",
       "      <td>25</td>\n",
       "      <td>120</td>\n",
       "      <td>14.596</td>\n",
       "      <td>17.204</td>\n",
       "      <td>1.0</td>\n",
       "      <td>26.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>532</th>\n",
       "      <td>43</td>\n",
       "      <td>4</td>\n",
       "      <td>18</td>\n",
       "      <td>446</td>\n",
       "      <td>16.031</td>\n",
       "      <td>12.959</td>\n",
       "      <td>1.0</td>\n",
       "      <td>6.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>553</th>\n",
       "      <td>51</td>\n",
       "      <td>2</td>\n",
       "      <td>19</td>\n",
       "      <td>159</td>\n",
       "      <td>1.068</td>\n",
       "      <td>3.384</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>568</th>\n",
       "      <td>39</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>67</td>\n",
       "      <td>3.834</td>\n",
       "      <td>16.668</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>571</th>\n",
       "      <td>40</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>220</td>\n",
       "      <td>8.166</td>\n",
       "      <td>27.034</td>\n",
       "      <td>1.0</td>\n",
       "      <td>16.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>580</th>\n",
       "      <td>39</td>\n",
       "      <td>1</td>\n",
       "      <td>19</td>\n",
       "      <td>60</td>\n",
       "      <td>9.593</td>\n",
       "      <td>6.667</td>\n",
       "      <td>1.0</td>\n",
       "      <td>27.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>585</th>\n",
       "      <td>34</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>27</td>\n",
       "      <td>1.982</td>\n",
       "      <td>7.549</td>\n",
       "      <td>1.0</td>\n",
       "      <td>35.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>594</th>\n",
       "      <td>28</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>28</td>\n",
       "      <td>2.284</td>\n",
       "      <td>7.040</td>\n",
       "      <td>1.0</td>\n",
       "      <td>33.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>620</th>\n",
       "      <td>41</td>\n",
       "      <td>2</td>\n",
       "      <td>22</td>\n",
       "      <td>75</td>\n",
       "      <td>9.877</td>\n",
       "      <td>7.823</td>\n",
       "      <td>0.0</td>\n",
       "      <td>23.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>642</th>\n",
       "      <td>42</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>190</td>\n",
       "      <td>3.157</td>\n",
       "      <td>11.663</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>657</th>\n",
       "      <td>37</td>\n",
       "      <td>3</td>\n",
       "      <td>16</td>\n",
       "      <td>50</td>\n",
       "      <td>7.320</td>\n",
       "      <td>10.980</td>\n",
       "      <td>1.0</td>\n",
       "      <td>36.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>658</th>\n",
       "      <td>52</td>\n",
       "      <td>5</td>\n",
       "      <td>9</td>\n",
       "      <td>70</td>\n",
       "      <td>1.329</td>\n",
       "      <td>5.251</td>\n",
       "      <td>1.0</td>\n",
       "      <td>9.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>672</th>\n",
       "      <td>52</td>\n",
       "      <td>4</td>\n",
       "      <td>13</td>\n",
       "      <td>234</td>\n",
       "      <td>7.387</td>\n",
       "      <td>10.631</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>700</th>\n",
       "      <td>36</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>20</td>\n",
       "      <td>0.729</td>\n",
       "      <td>0.891</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>713</th>\n",
       "      <td>54</td>\n",
       "      <td>3</td>\n",
       "      <td>21</td>\n",
       "      <td>118</td>\n",
       "      <td>9.600</td>\n",
       "      <td>7.392</td>\n",
       "      <td>0.0</td>\n",
       "      <td>14.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>725</th>\n",
       "      <td>48</td>\n",
       "      <td>2</td>\n",
       "      <td>30</td>\n",
       "      <td>148</td>\n",
       "      <td>3.975</td>\n",
       "      <td>6.681</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>801</th>\n",
       "      <td>48</td>\n",
       "      <td>1</td>\n",
       "      <td>30</td>\n",
       "      <td>101</td>\n",
       "      <td>1.875</td>\n",
       "      <td>4.589</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>826</th>\n",
       "      <td>48</td>\n",
       "      <td>1</td>\n",
       "      <td>13</td>\n",
       "      <td>50</td>\n",
       "      <td>6.114</td>\n",
       "      <td>9.286</td>\n",
       "      <td>1.0</td>\n",
       "      <td>30.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>847</th>\n",
       "      <td>25</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>2.802</td>\n",
       "      <td>3.210</td>\n",
       "      <td>1.0</td>\n",
       "      <td>33.4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Idade  Educação  Anos de emprego  Renda  Dívida do cartão  \\\n",
       "4       47         1               31    253             9.308   \n",
       "24      37         4               10    123             3.022   \n",
       "43      37         5                9    177             0.888   \n",
       "51      36         1               11     33             1.266   \n",
       "78      41         2               21    145             3.237   \n",
       "81      30         3                0     65             3.900   \n",
       "82      40         3               18    157             3.326   \n",
       "183     47         1               29    129            20.561   \n",
       "198     47         3               16    221            15.792   \n",
       "207     43         1               25    242             1.636   \n",
       "320     41         3               13     91             2.316   \n",
       "350     47         1               31    136            14.231   \n",
       "356     40         2               13    102             6.227   \n",
       "360     42         4               15    186             2.404   \n",
       "367     46         5               15    126             0.477   \n",
       "443     51         2               31    249             4.273   \n",
       "450     41         3               12     86             4.991   \n",
       "454     51         2               27    166             0.821   \n",
       "461     41         3               17    176            11.359   \n",
       "497     33         1               14     72            15.017   \n",
       "513     54         1               25    120            14.596   \n",
       "532     43         4               18    446            16.031   \n",
       "553     51         2               19    159             1.068   \n",
       "568     39         1               20     67             3.834   \n",
       "571     40         3                5    220             8.166   \n",
       "580     39         1               19     60             9.593   \n",
       "585     34         4                6     27             1.982   \n",
       "594     28         1                0     28             2.284   \n",
       "620     41         2               22     75             9.877   \n",
       "642     42         5                6    190             3.157   \n",
       "657     37         3               16     50             7.320   \n",
       "658     52         5                9     70             1.329   \n",
       "672     52         4               13    234             7.387   \n",
       "700     36         5                5     20             0.729   \n",
       "713     54         3               21    118             9.600   \n",
       "725     48         2               30    148             3.975   \n",
       "801     48         1               30    101             1.875   \n",
       "826     48         1               13     50             6.114   \n",
       "847     25         4                0     18             2.802   \n",
       "\n",
       "     Outras dívidas  Inadimplente  Razão débito-renda  \n",
       "4             8.908           0.0                 7.2  \n",
       "24           18.257           0.0                17.3  \n",
       "43            9.555           0.0                 5.9  \n",
       "51            9.459           0.0                32.5  \n",
       "78           14.453           0.0                12.2  \n",
       "81           15.405           1.0                29.7  \n",
       "82            7.036           0.0                 6.6  \n",
       "183          12.076           1.0                25.3  \n",
       "198          23.104           1.0                17.6  \n",
       "207           4.656           0.0                 2.6  \n",
       "320          20.616           1.0                25.2  \n",
       "350          17.185           1.0                23.1  \n",
       "356          13.051           1.0                18.9  \n",
       "360           4.292           0.0                 3.6  \n",
       "367           3.429           0.0                 3.1  \n",
       "443          15.149           0.0                 7.8  \n",
       "450          17.799           1.0                26.5  \n",
       "454          18.269           0.0                11.5  \n",
       "461           5.009           1.0                 9.3  \n",
       "497          14.719           1.0                41.3  \n",
       "513          17.204           1.0                26.5  \n",
       "532          12.959           1.0                 6.5  \n",
       "553           3.384           0.0                 2.8  \n",
       "568          16.668           0.0                30.6  \n",
       "571          27.034           1.0                16.0  \n",
       "580           6.667           1.0                27.1  \n",
       "585           7.549           1.0                35.3  \n",
       "594           7.040           1.0                33.3  \n",
       "620           7.823           0.0                23.6  \n",
       "642          11.663           0.0                 7.8  \n",
       "657          10.980           1.0                36.6  \n",
       "658           5.251           1.0                 9.4  \n",
       "672          10.631           0.0                 7.7  \n",
       "700           0.891           0.0                 8.1  \n",
       "713           7.392           0.0                14.4  \n",
       "725           6.681           0.0                 7.2  \n",
       "801           4.589           0.0                 6.4  \n",
       "826           9.286           1.0                30.8  \n",
       "847           3.210           1.0                33.4  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from scipy import stats\n",
    "\n",
    "# Remover as colunas indesejadas\n",
    "df = df.drop(columns=['Unnamed: 0', 'ID do cliente'])\n",
    "\n",
    "# Remover linhas com valores ausentes e capturar as linhas removidas para exibição\n",
    "df_cleaned = df.dropna()\n",
    "removed_missing_values = df[~df.index.isin(df_cleaned.index)]  # Capturar linhas com valores ausentes\n",
    "\n",
    "# Remover linhas com outliers usando o método do escore z (limite |3|)\n",
    "z_scores = stats.zscore(df_cleaned.select_dtypes(include=['float64', 'int64']))\n",
    "abs_z_scores = abs(z_scores)\n",
    "filtered_entries = (abs_z_scores < 3).all(axis=1)\n",
    "\n",
    "# Filtrar linhas consideradas como outliers e capturar os outliers removidos para exibição\n",
    "df_no_outliers = df_cleaned[filtered_entries]\n",
    "removed_outliers = df_cleaned[~filtered_entries]\n",
    "\n",
    "# Exibir os dados limpos\n",
    "print(\"Dados Limpos sem Valores Ausentes e Outliers:\")\n",
    "display(df_no_outliers)\n",
    "\n",
    "# Exibir os dados que foram excluídos\n",
    "print(\"Dados Excluídos devido a Valores Ausentes:\")\n",
    "display(removed_missing_values)\n",
    "\n",
    "print(\"Dados Excluídos devido a Outliers:\")\n",
    "display(removed_outliers)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Normalização com standard scaler (z-score)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dados Normalizados usando StandardScaler:\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Idade</th>\n",
       "      <th>Educação</th>\n",
       "      <th>Anos de emprego</th>\n",
       "      <th>Renda</th>\n",
       "      <th>Dívida do cartão</th>\n",
       "      <th>Outras dívidas</th>\n",
       "      <th>Inadimplente</th>\n",
       "      <th>Razão débito-renda</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.840132</td>\n",
       "      <td>0.381458</td>\n",
       "      <td>-0.310551</td>\n",
       "      <td>-0.920158</td>\n",
       "      <td>-0.849592</td>\n",
       "      <td>-0.656402</td>\n",
       "      <td>-0.574439</td>\n",
       "      <td>-0.569768</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.606453</td>\n",
       "      <td>-0.775165</td>\n",
       "      <td>2.919567</td>\n",
       "      <td>2.542951</td>\n",
       "      <td>2.406980</td>\n",
       "      <td>2.437016</td>\n",
       "      <td>-0.574439</td>\n",
       "      <td>0.482053</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-0.181629</td>\n",
       "      <td>0.381458</td>\n",
       "      <td>0.335473</td>\n",
       "      <td>0.704510</td>\n",
       "      <td>3.523915</td>\n",
       "      <td>1.391012</td>\n",
       "      <td>1.740830</td>\n",
       "      <td>1.792783</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-0.692510</td>\n",
       "      <td>0.381458</td>\n",
       "      <td>-0.633562</td>\n",
       "      <td>-0.920158</td>\n",
       "      <td>-0.442703</td>\n",
       "      <td>-0.897554</td>\n",
       "      <td>-0.574439</td>\n",
       "      <td>-0.569768</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.456971</td>\n",
       "      <td>0.381458</td>\n",
       "      <td>-0.633562</td>\n",
       "      <td>0.661756</td>\n",
       "      <td>-0.617293</td>\n",
       "      <td>-0.924397</td>\n",
       "      <td>-0.574439</td>\n",
       "      <td>-1.330315</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>843</th>\n",
       "      <td>-0.309349</td>\n",
       "      <td>0.381458</td>\n",
       "      <td>0.012461</td>\n",
       "      <td>0.191457</td>\n",
       "      <td>-0.222823</td>\n",
       "      <td>-0.825252</td>\n",
       "      <td>-0.574439</td>\n",
       "      <td>-0.990496</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>844</th>\n",
       "      <td>0.840132</td>\n",
       "      <td>-0.775165</td>\n",
       "      <td>-0.149045</td>\n",
       "      <td>0.105948</td>\n",
       "      <td>-0.433207</td>\n",
       "      <td>-0.602283</td>\n",
       "      <td>-0.574439</td>\n",
       "      <td>-0.877223</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>846</th>\n",
       "      <td>-0.820230</td>\n",
       "      <td>0.381458</td>\n",
       "      <td>-0.149045</td>\n",
       "      <td>-0.278842</td>\n",
       "      <td>-0.677924</td>\n",
       "      <td>-0.245967</td>\n",
       "      <td>-0.574439</td>\n",
       "      <td>-0.456495</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>848</th>\n",
       "      <td>-0.309349</td>\n",
       "      <td>-0.775165</td>\n",
       "      <td>0.658485</td>\n",
       "      <td>-0.535368</td>\n",
       "      <td>-0.855436</td>\n",
       "      <td>-0.819623</td>\n",
       "      <td>-0.574439</td>\n",
       "      <td>-1.119951</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>849</th>\n",
       "      <td>2.245053</td>\n",
       "      <td>-0.775165</td>\n",
       "      <td>1.304508</td>\n",
       "      <td>1.003791</td>\n",
       "      <td>0.422940</td>\n",
       "      <td>0.454111</td>\n",
       "      <td>-0.574439</td>\n",
       "      <td>-0.197585</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>661 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Idade  Educação  Anos de emprego     Renda  Dívida do cartão  \\\n",
       "0    0.840132  0.381458        -0.310551 -0.920158         -0.849592   \n",
       "1    1.606453 -0.775165         2.919567  2.542951          2.406980   \n",
       "2   -0.181629  0.381458         0.335473  0.704510          3.523915   \n",
       "3   -0.692510  0.381458        -0.633562 -0.920158         -0.442703   \n",
       "6    0.456971  0.381458        -0.633562  0.661756         -0.617293   \n",
       "..        ...       ...              ...       ...               ...   \n",
       "843 -0.309349  0.381458         0.012461  0.191457         -0.222823   \n",
       "844  0.840132 -0.775165        -0.149045  0.105948         -0.433207   \n",
       "846 -0.820230  0.381458        -0.149045 -0.278842         -0.677924   \n",
       "848 -0.309349 -0.775165         0.658485 -0.535368         -0.855436   \n",
       "849  2.245053 -0.775165         1.304508  1.003791          0.422940   \n",
       "\n",
       "     Outras dívidas  Inadimplente  Razão débito-renda  \n",
       "0         -0.656402     -0.574439           -0.569768  \n",
       "1          2.437016     -0.574439            0.482053  \n",
       "2          1.391012      1.740830            1.792783  \n",
       "3         -0.897554     -0.574439           -0.569768  \n",
       "6         -0.924397     -0.574439           -1.330315  \n",
       "..              ...           ...                 ...  \n",
       "843       -0.825252     -0.574439           -0.990496  \n",
       "844       -0.602283     -0.574439           -0.877223  \n",
       "846       -0.245967     -0.574439           -0.456495  \n",
       "848       -0.819623     -0.574439           -1.119951  \n",
       "849        0.454111     -0.574439           -0.197585  \n",
       "\n",
       "[661 rows x 8 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.preprocessing import StandardScaler\n",
    "import pandas as pd\n",
    "\n",
    "# Selecionar colunas numéricas para normalização\n",
    "numeric_columns = df_no_outliers.select_dtypes(include=['float64', 'int64']).columns\n",
    "\n",
    "# Inicializar o StandardScaler\n",
    "scaler = StandardScaler()\n",
    "\n",
    "# Ajustar e transformar os dados\n",
    "# Criar uma cópia para evitar o aviso SettingWithCopyWarning\n",
    "df_normalized = df_no_outliers.copy()\n",
    "df_normalized[numeric_columns] = scaler.fit_transform(df_normalized[numeric_columns])\n",
    "\n",
    "# Exibir os dados normalizados\n",
    "print(\"Dados Normalizados usando StandardScaler:\")\n",
    "display(df_normalized)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Escolha de 'k' pelo método do cotovelo"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "plotlyServerURL": "https://plot.ly"
       },
       "data": [
        {
         "hovertemplate": "Número de Clusters=%{x}<br>Inércia=%{y}<extra></extra>",
         "legendgroup": "",
         "line": {
          "color": "#636efa",
          "dash": "dash"
         },
         "marker": {
          "color": "blue",
          "size": 8,
          "symbol": "circle"
         },
         "mode": "lines+markers",
         "name": "",
         "orientation": "v",
         "showlegend": false,
         "type": "scatter",
         "x": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
         ],
         "xaxis": "x",
         "y": [
          5287.999999999999,
          4389.204704980222,
          3272.3574492816665,
          2861.6615536559434,
          2667.417302090772,
          2391.2462803340445,
          2265.7551151293046,
          2115.518239140952,
          1989.3463696109773,
          1912.7271577780705
         ],
         "yaxis": "y"
        }
       ],
       "layout": {
        "legend": {
         "tracegroupgap": 0
        },
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "white",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "white",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "#C8D4E3",
             "linecolor": "#C8D4E3",
             "minorgridcolor": "#C8D4E3",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "#C8D4E3",
             "linecolor": "#C8D4E3",
             "minorgridcolor": "#C8D4E3",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "fillpattern": {
             "fillmode": "overlay",
             "size": 10,
             "solidity": 0.2
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "white",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "#C8D4E3"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "white",
          "polar": {
           "angularaxis": {
            "gridcolor": "#EBF0F8",
            "linecolor": "#EBF0F8",
            "ticks": ""
           },
           "bgcolor": "white",
           "radialaxis": {
            "gridcolor": "#EBF0F8",
            "linecolor": "#EBF0F8",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "white",
            "gridcolor": "#DFE8F3",
            "gridwidth": 2,
            "linecolor": "#EBF0F8",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "#EBF0F8"
           },
           "yaxis": {
            "backgroundcolor": "white",
            "gridcolor": "#DFE8F3",
            "gridwidth": 2,
            "linecolor": "#EBF0F8",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "#EBF0F8"
           },
           "zaxis": {
            "backgroundcolor": "white",
            "gridcolor": "#DFE8F3",
            "gridwidth": 2,
            "linecolor": "#EBF0F8",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "#EBF0F8"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "#DFE8F3",
            "linecolor": "#A2B1C6",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "#DFE8F3",
            "linecolor": "#A2B1C6",
            "ticks": ""
           },
           "bgcolor": "white",
           "caxis": {
            "gridcolor": "#DFE8F3",
            "linecolor": "#A2B1C6",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "#EBF0F8",
           "linecolor": "#EBF0F8",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "#EBF0F8",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "#EBF0F8",
           "linecolor": "#EBF0F8",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "#EBF0F8",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "text": "Método do Cotovelo para k Ótimo",
         "x": 0.5
        },
        "xaxis": {
         "anchor": "y",
         "domain": [
          0,
          1
         ],
         "dtick": 1,
         "title": {
          "text": "Número de Clusters"
         }
        },
        "yaxis": {
         "anchor": "x",
         "domain": [
          0,
          1
         ],
         "title": {
          "text": "Inércia"
         }
        }
       }
      }
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import plotly.express as px\n",
    "from sklearn.cluster import KMeans\n",
    "import pandas as pd\n",
    "\n",
    "# Selecionando apenas colunas numéricas para a clusterização\n",
    "numeric_data = df_normalized.select_dtypes(include=['float64', 'int64'])\n",
    "\n",
    "# Método do cotovelo para determinar o número ideal de clusters\n",
    "inertia_values = []\n",
    "cluster_range = range(1, 11)  # Verificando valores de k de 1 a 10\n",
    "\n",
    "for k in cluster_range:\n",
    "    kmeans = KMeans(n_clusters=k, random_state=42)\n",
    "    kmeans.fit(numeric_data)\n",
    "    inertia_values.append(kmeans.inertia_)\n",
    "\n",
    "# Criando um DataFrame para plotagem\n",
    "elbow_data = pd.DataFrame({\n",
    "    'Número de Clusters (k)': list(cluster_range),\n",
    "    'Inércia': inertia_values\n",
    "})\n",
    "\n",
    "# Plotando a curva do cotovelo\n",
    "fig = px.line(elbow_data, x='Número de Clusters (k)', y='Inércia', markers=True, \n",
    "              title='Método do Cotovelo para k Ótimo',\n",
    "              labels={'Inércia': 'Inércia', 'Número de Clusters (k)': 'Número de Clusters'},\n",
    "              template='plotly_white')\n",
    "\n",
    "fig.update_traces(line=dict(dash='dash'), marker=dict(size=8, color='blue'))\n",
    "fig.update_layout(title_x=0.5, xaxis=dict(dtick=1))\n",
    "\n",
    "fig.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Executando a clusterização com k-means"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dados com Atribuições de Cluster:\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Idade</th>\n",
       "      <th>Educação</th>\n",
       "      <th>Anos de emprego</th>\n",
       "      <th>Renda</th>\n",
       "      <th>Dívida do cartão</th>\n",
       "      <th>Outras dívidas</th>\n",
       "      <th>Inadimplente</th>\n",
       "      <th>Razão débito-renda</th>\n",
       "      <th>Cluster</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.840132</td>\n",
       "      <td>0.381458</td>\n",
       "      <td>-0.310551</td>\n",
       "      <td>-0.920158</td>\n",
       "      <td>-0.849592</td>\n",
       "      <td>-0.656402</td>\n",
       "      <td>-0.574439</td>\n",
       "      <td>-0.569768</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.606453</td>\n",
       "      <td>-0.775165</td>\n",
       "      <td>2.919567</td>\n",
       "      <td>2.542951</td>\n",
       "      <td>2.406980</td>\n",
       "      <td>2.437016</td>\n",
       "      <td>-0.574439</td>\n",
       "      <td>0.482053</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-0.181629</td>\n",
       "      <td>0.381458</td>\n",
       "      <td>0.335473</td>\n",
       "      <td>0.704510</td>\n",
       "      <td>3.523915</td>\n",
       "      <td>1.391012</td>\n",
       "      <td>1.740830</td>\n",
       "      <td>1.792783</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-0.692510</td>\n",
       "      <td>0.381458</td>\n",
       "      <td>-0.633562</td>\n",
       "      <td>-0.920158</td>\n",
       "      <td>-0.442703</td>\n",
       "      <td>-0.897554</td>\n",
       "      <td>-0.574439</td>\n",
       "      <td>-0.569768</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.456971</td>\n",
       "      <td>0.381458</td>\n",
       "      <td>-0.633562</td>\n",
       "      <td>0.661756</td>\n",
       "      <td>-0.617293</td>\n",
       "      <td>-0.924397</td>\n",
       "      <td>-0.574439</td>\n",
       "      <td>-1.330315</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>843</th>\n",
       "      <td>-0.309349</td>\n",
       "      <td>0.381458</td>\n",
       "      <td>0.012461</td>\n",
       "      <td>0.191457</td>\n",
       "      <td>-0.222823</td>\n",
       "      <td>-0.825252</td>\n",
       "      <td>-0.574439</td>\n",
       "      <td>-0.990496</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>844</th>\n",
       "      <td>0.840132</td>\n",
       "      <td>-0.775165</td>\n",
       "      <td>-0.149045</td>\n",
       "      <td>0.105948</td>\n",
       "      <td>-0.433207</td>\n",
       "      <td>-0.602283</td>\n",
       "      <td>-0.574439</td>\n",
       "      <td>-0.877223</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>846</th>\n",
       "      <td>-0.820230</td>\n",
       "      <td>0.381458</td>\n",
       "      <td>-0.149045</td>\n",
       "      <td>-0.278842</td>\n",
       "      <td>-0.677924</td>\n",
       "      <td>-0.245967</td>\n",
       "      <td>-0.574439</td>\n",
       "      <td>-0.456495</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>848</th>\n",
       "      <td>-0.309349</td>\n",
       "      <td>-0.775165</td>\n",
       "      <td>0.658485</td>\n",
       "      <td>-0.535368</td>\n",
       "      <td>-0.855436</td>\n",
       "      <td>-0.819623</td>\n",
       "      <td>-0.574439</td>\n",
       "      <td>-1.119951</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>849</th>\n",
       "      <td>2.245053</td>\n",
       "      <td>-0.775165</td>\n",
       "      <td>1.304508</td>\n",
       "      <td>1.003791</td>\n",
       "      <td>0.422940</td>\n",
       "      <td>0.454111</td>\n",
       "      <td>-0.574439</td>\n",
       "      <td>-0.197585</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>661 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Idade  Educação  Anos de emprego     Renda  Dívida do cartão  \\\n",
       "0    0.840132  0.381458        -0.310551 -0.920158         -0.849592   \n",
       "1    1.606453 -0.775165         2.919567  2.542951          2.406980   \n",
       "2   -0.181629  0.381458         0.335473  0.704510          3.523915   \n",
       "3   -0.692510  0.381458        -0.633562 -0.920158         -0.442703   \n",
       "6    0.456971  0.381458        -0.633562  0.661756         -0.617293   \n",
       "..        ...       ...              ...       ...               ...   \n",
       "843 -0.309349  0.381458         0.012461  0.191457         -0.222823   \n",
       "844  0.840132 -0.775165        -0.149045  0.105948         -0.433207   \n",
       "846 -0.820230  0.381458        -0.149045 -0.278842         -0.677924   \n",
       "848 -0.309349 -0.775165         0.658485 -0.535368         -0.855436   \n",
       "849  2.245053 -0.775165         1.304508  1.003791          0.422940   \n",
       "\n",
       "     Outras dívidas  Inadimplente  Razão débito-renda  Cluster  \n",
       "0         -0.656402     -0.574439           -0.569768        1  \n",
       "1          2.437016     -0.574439            0.482053        2  \n",
       "2          1.391012      1.740830            1.792783        2  \n",
       "3         -0.897554     -0.574439           -0.569768        1  \n",
       "6         -0.924397     -0.574439           -1.330315        1  \n",
       "..              ...           ...                 ...      ...  \n",
       "843       -0.825252     -0.574439           -0.990496        1  \n",
       "844       -0.602283     -0.574439           -0.877223        1  \n",
       "846       -0.245967     -0.574439           -0.456495        1  \n",
       "848       -0.819623     -0.574439           -1.119951        1  \n",
       "849        0.454111     -0.574439           -0.197585        2  \n",
       "\n",
       "[661 rows x 9 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Centros dos Clusters (Normalizados):\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Idade</th>\n",
       "      <th>Educação</th>\n",
       "      <th>Anos de emprego</th>\n",
       "      <th>Renda</th>\n",
       "      <th>Dívida do cartão</th>\n",
       "      <th>Outras dívidas</th>\n",
       "      <th>Inadimplente</th>\n",
       "      <th>Razão débito-renda</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-0.476878</td>\n",
       "      <td>0.171163</td>\n",
       "      <td>-0.759411</td>\n",
       "      <td>-0.549250</td>\n",
       "      <td>0.028949</td>\n",
       "      <td>-0.093926</td>\n",
       "      <td>1.545385</td>\n",
       "      <td>0.616551</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-0.099792</td>\n",
       "      <td>-0.077470</td>\n",
       "      <td>-0.105313</td>\n",
       "      <td>-0.254083</td>\n",
       "      <td>-0.456352</td>\n",
       "      <td>-0.451118</td>\n",
       "      <td>-0.574439</td>\n",
       "      <td>-0.469380</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.825835</td>\n",
       "      <td>0.018934</td>\n",
       "      <td>1.165902</td>\n",
       "      <td>1.338488</td>\n",
       "      <td>1.237023</td>\n",
       "      <td>1.363668</td>\n",
       "      <td>-0.177042</td>\n",
       "      <td>0.597983</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Idade  Educação  Anos de emprego     Renda  Dívida do cartão  \\\n",
       "0 -0.476878  0.171163        -0.759411 -0.549250          0.028949   \n",
       "1 -0.099792 -0.077470        -0.105313 -0.254083         -0.456352   \n",
       "2  0.825835  0.018934         1.165902  1.338488          1.237023   \n",
       "\n",
       "   Outras dívidas  Inadimplente  Razão débito-renda  \n",
       "0       -0.093926      1.545385            0.616551  \n",
       "1       -0.451118     -0.574439           -0.469380  \n",
       "2        1.363668     -0.177042            0.597983  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Centros dos Clusters (Desnormalizados, Arredondados para 2 Casas Decimais):\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Idade</th>\n",
       "      <th>Educação</th>\n",
       "      <th>Anos de emprego</th>\n",
       "      <th>Renda</th>\n",
       "      <th>Dívida do cartão</th>\n",
       "      <th>Outras dívidas</th>\n",
       "      <th>Inadimplente</th>\n",
       "      <th>Razão débito-renda</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>30.69</td>\n",
       "      <td>1.82</td>\n",
       "      <td>3.22</td>\n",
       "      <td>27.68</td>\n",
       "      <td>1.33</td>\n",
       "      <td>2.37</td>\n",
       "      <td>0.92</td>\n",
       "      <td>13.63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>33.64</td>\n",
       "      <td>1.60</td>\n",
       "      <td>7.27</td>\n",
       "      <td>34.58</td>\n",
       "      <td>0.66</td>\n",
       "      <td>1.55</td>\n",
       "      <td>0.00</td>\n",
       "      <td>6.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>40.89</td>\n",
       "      <td>1.69</td>\n",
       "      <td>15.14</td>\n",
       "      <td>71.83</td>\n",
       "      <td>2.98</td>\n",
       "      <td>5.74</td>\n",
       "      <td>0.17</td>\n",
       "      <td>13.52</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Idade  Educação  Anos de emprego  Renda  Dívida do cartão  Outras dívidas  \\\n",
       "0  30.69      1.82             3.22  27.68              1.33            2.37   \n",
       "1  33.64      1.60             7.27  34.58              0.66            1.55   \n",
       "2  40.89      1.69            15.14  71.83              2.98            5.74   \n",
       "\n",
       "   Inadimplente  Razão débito-renda  \n",
       "0          0.92               13.63  \n",
       "1          0.00                6.92  \n",
       "2          0.17               13.52  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.cluster import KMeans\n",
    "import pandas as pd\n",
    "\n",
    "# Selecionando apenas colunas numéricas para a clusterização\n",
    "numeric_data = df_normalized.select_dtypes(include=['float64', 'int64'])\n",
    "\n",
    "# Aplicando k-means com 3 clusters\n",
    "kmeans = KMeans(n_clusters=3, random_state=42)\n",
    "df_normalized['Cluster'] = kmeans.fit_predict(numeric_data)\n",
    "\n",
    "# Exibir o DataFrame resultante com as atribuições de cluster\n",
    "print(\"Dados com Atribuições de Cluster:\")\n",
    "display(df_normalized)\n",
    "\n",
    "# Exibir os centros dos clusters (valores normalizados)\n",
    "print(\"Centros dos Clusters (Normalizados):\")\n",
    "normalized_centroids = pd.DataFrame(kmeans.cluster_centers_, columns=numeric_data.columns)\n",
    "display(normalized_centroids)\n",
    "\n",
    "# Desnormalizando os centróides para a escala original\n",
    "denormalized_centroids = scaler.inverse_transform(kmeans.cluster_centers_)\n",
    "\n",
    "# Arredondando os valores desnormalizados para duas casas decimais\n",
    "denormalized_centroids_df = pd.DataFrame(denormalized_centroids, columns=numeric_data.columns).round(2)\n",
    "\n",
    "# Exibir os centros dos clusters (valores originais, arredondados)\n",
    "print(\"Centros dos Clusters (Desnormalizados, Arredondados para 2 Casas Decimais):\")\n",
    "display(denormalized_centroids_df)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "-O cluster 1 apresenta os clientes mais jovens, com grau mais alto de educação e menos anos de carreira. Sua renda também é a menor e possui maior probabilidade de inadimplência.\n",
    "\n",
    "-O cluster 2 é um cluster intermediário em idade, anos de emprego e renda, possuíndo grau zero de inadimplência e baixo endividamento.\n",
    "\n",
    "-O cluster 3 é o mais velho e com maior renda, possuíndo o maior endividamento e tendo grau baixo de inadimplência."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
